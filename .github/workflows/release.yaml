name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      cli_version: ${{ steps.release.outputs['cli--version'] }}
      cli_release_created: ${{ steps.release.outputs['cli--release_created'] }}
      core_vesion: ${{ steps.release.outputs['core--version'] }}
      core_release_created: ${{ steps.release.outputs['core--release_created'] }}
    steps:
    - uses: googleapis/release-please-action@v4
      id: release
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    #- uses: actions/checkout@v4
    #- name: Tag major and minor versions
    #  if: ${{ steps.release.outputs.release_created }}
    #  run: |
    #    git config user.name github-actions[bot]
    #    git config user.email 41898282+github-actions[bot]@users.noreply.github.com
    #    git tag -d v${{ steps.release.outputs.major }} || true
    #    git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
    #    git push origin :v${{ steps.release.outputs.major }} || true
    #    git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
    #    git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
    #    git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
    #    git push origin v${{ steps.release.outputs.major }}
    #    git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

  publish-cli:
    needs: release
    if: ${{ needs.release.outputs.cli_release_created }}
    name: Build CLI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v2
      with:
        node-version: '22'
        registry-url: 'https://registry.npmjs.org'
    - name: Install dependencies
      working-directory: ./cli
      run: npm ci
    - name: Build
      working-directory: ./cli
      run: npm run build
    - name: Publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      working-directory: ./cli
      run: npm publish --access public

  publish-k8s:
    needs:
    - publish-cli
    - release
    if: ${{ needs.publish-cli.result == 'success' }}
    name: Generate Kubernetes Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - 1.32
          - 1.31
          - 1.30
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
      - name: Generate k8s-${{ matrix.versions }} Package
        run: |
          npx @kubeframe/cli generate-k8s --output ./k8s --version ${{ matrix.versions }}
      - name: Build
        working-directory: ./k8s
        run: npm run build
      - name: Copy package.json
        working-directory: ./k8s
        run: cp ./package.json ./dist/package.json
      #- name: Publish
      #  working-directory: ./k8s/dist
      #  env:
      #    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #  run: npm publish --access public
      # Update version for core package if its latest version of k8s package
      - name: Update Core Package Version
        if: ${{ matrix.versions == '1.32' }}
        working-directory: ./core
        run: |
          jq '.dependencies["@kubeframe/k8s"] = "npm:@kubeframe/k8s-1.32@${{needs.release.outputscli_version}}"' package.json > tmp.json && mv tmp.json package.json
          git checkout -b update-core-package-version-${{needs.release.outputscli_version}}
          git add package.json
          git commit -m "chore: Update core package @kubeframe/k8s dependency to @kubeframe/k8s-1.32:${{needs.release.outputscli_version}}"
          git push origin update-core-package-version-${{needs.release.outputscli_version}}
          gh pr create --title "chore: Update core package @kubeframe/k8s dependency to @kubeframe/k8s-1.32:${{needs.release.outputscli_version}}" --body "This PR updates the core package @kubeframe/k8s dependency to @kubeframe/k8s-1.32:${{needs.release.outputscli_version}}" --base main --head update-core-package-version-${{needs.release.outputscli_version}}
    

  
